var chai = require('chai');
var mongoose = require('mongoose');
var should = chai.should();

require('../index')(mongoose);

describe('Mongoose Pager', function() {
  var query = null;
  
  beforeEach(function() {
    query = new mongoose.Query;
  });
  
  it('should add a paginate method to Query\'s prototype', function() {
    return should.exist(mongoose.Query.prototype.paginate);
  });
  
  describe('defaults', function() {
    beforeEach(function() {
      query.paginate();
    });
    
    it('should skip to 0', function() {
      query.options.should.include.keys('skip');
      return query.options.skip.should.be.eq(0);
    });
    
    it('should limit to 10', function() {
      query.options.should.include.keys('limit');
      return query.options.limit.should.be.eq(10);
    });
  });
  
  describe('paginate', function() {
    it('should skip 10 when page is 2', function() {
      query.paginate(2);
      query.options.should.include.keys('skip');
      return query.options.skip.should.be.eq(10);
    });
    
    it('should skip 20 when page is 3', function() {
      query.paginate(3);
      query.options.should.include.keys('skip');
      return query.options.skip.should.be.eq(20);
    });
    
    it('should skip 30 when page is 3 and limit is 15', function() {
      query.paginate(3, 15);
      query.options.should.include.keys('skip', 'limit');
      query.options.skip.should.be.eq(30);
      return query.options.limit.should.be.eq(15);
    });
    
    return it('should skip 30 when page is "3" and limit is "15"', function() {
      query.paginate("3", "15");
      query.options.should.include.keys('skip', 'limit');
      query.options.skip.should.be.eq(30);
      return query.options.limit.should.be.eq(15);
    });
  });
});
